/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RollupsIdImport } from './routes/rollups/$id'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as AuthConfirmImport } from './routes/auth/confirm'
import { Route as CreateSetupIndexImport } from './routes/create/setup/index'
import { Route as CreateInspectIndexImport } from './routes/create/inspect/index'
import { Route as CreateDeployIndexImport } from './routes/create/deploy/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RollupsIdRoute = RollupsIdImport.update({
  id: '/rollups/$id',
  path: '/rollups/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthConfirmRoute = AuthConfirmImport.update({
  id: '/auth/confirm',
  path: '/auth/confirm',
  getParentRoute: () => rootRoute,
} as any)

const CreateSetupIndexRoute = CreateSetupIndexImport.update({
  id: '/create/setup/',
  path: '/create/setup/',
  getParentRoute: () => rootRoute,
} as any)

const CreateInspectIndexRoute = CreateInspectIndexImport.update({
  id: '/create/inspect/',
  path: '/create/inspect/',
  getParentRoute: () => rootRoute,
} as any)

const CreateDeployIndexRoute = CreateDeployIndexImport.update({
  id: '/create/deploy/',
  path: '/create/deploy/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/confirm': {
      id: '/auth/confirm'
      path: '/auth/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/rollups/$id': {
      id: '/rollups/$id'
      path: '/rollups/$id'
      fullPath: '/rollups/$id'
      preLoaderRoute: typeof RollupsIdImport
      parentRoute: typeof rootRoute
    }
    '/create/deploy/': {
      id: '/create/deploy/'
      path: '/create/deploy'
      fullPath: '/create/deploy'
      preLoaderRoute: typeof CreateDeployIndexImport
      parentRoute: typeof rootRoute
    }
    '/create/inspect/': {
      id: '/create/inspect/'
      path: '/create/inspect'
      fullPath: '/create/inspect'
      preLoaderRoute: typeof CreateInspectIndexImport
      parentRoute: typeof rootRoute
    }
    '/create/setup/': {
      id: '/create/setup/'
      path: '/create/setup'
      fullPath: '/create/setup'
      preLoaderRoute: typeof CreateSetupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/rollups/$id': typeof RollupsIdRoute
  '/create/deploy': typeof CreateDeployIndexRoute
  '/create/inspect': typeof CreateInspectIndexRoute
  '/create/setup': typeof CreateSetupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/rollups/$id': typeof RollupsIdRoute
  '/create/deploy': typeof CreateDeployIndexRoute
  '/create/inspect': typeof CreateInspectIndexRoute
  '/create/setup': typeof CreateSetupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/confirm': typeof AuthConfirmRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/rollups/$id': typeof RollupsIdRoute
  '/create/deploy/': typeof CreateDeployIndexRoute
  '/create/inspect/': typeof CreateInspectIndexRoute
  '/create/setup/': typeof CreateSetupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/confirm'
    | '/auth/signin'
    | '/auth/signup'
    | '/rollups/$id'
    | '/create/deploy'
    | '/create/inspect'
    | '/create/setup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/confirm'
    | '/auth/signin'
    | '/auth/signup'
    | '/rollups/$id'
    | '/create/deploy'
    | '/create/inspect'
    | '/create/setup'
  id:
    | '__root__'
    | '/'
    | '/auth/confirm'
    | '/auth/signin'
    | '/auth/signup'
    | '/rollups/$id'
    | '/create/deploy/'
    | '/create/inspect/'
    | '/create/setup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthConfirmRoute: typeof AuthConfirmRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  RollupsIdRoute: typeof RollupsIdRoute
  CreateDeployIndexRoute: typeof CreateDeployIndexRoute
  CreateInspectIndexRoute: typeof CreateInspectIndexRoute
  CreateSetupIndexRoute: typeof CreateSetupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthConfirmRoute: AuthConfirmRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  RollupsIdRoute: RollupsIdRoute,
  CreateDeployIndexRoute: CreateDeployIndexRoute,
  CreateInspectIndexRoute: CreateInspectIndexRoute,
  CreateSetupIndexRoute: CreateSetupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/confirm",
        "/auth/signin",
        "/auth/signup",
        "/rollups/$id",
        "/create/deploy/",
        "/create/inspect/",
        "/create/setup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/confirm": {
      "filePath": "auth/confirm.tsx"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/rollups/$id": {
      "filePath": "rollups/$id.tsx"
    },
    "/create/deploy/": {
      "filePath": "create/deploy/index.tsx"
    },
    "/create/inspect/": {
      "filePath": "create/inspect/index.tsx"
    },
    "/create/setup/": {
      "filePath": "create/setup/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
